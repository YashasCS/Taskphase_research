

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 23:29:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 29/04/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F47J53 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _SSPBUF	set	4041
    49  0000                     _ADCON1	set	4033
    50  0000                     _ADCON0	set	4034
    51  0000                     _PIR1bits	set	3998
    52  0000                     _SSPCON1	set	4038
    53  0000                     _SSPSTAT	set	4039
    54  0000                     _TRISCbits	set	3988
    55  0000                     _TRISAbits	set	3986
    56  0000                     _TRISBbits	set	3987
    57  0000                     _LATD	set	3980
    58  0000                     _INTCON2bits	set	4081
    59  0000                     _OSCCON	set	4051
    60  0000                     _TRISD	set	3989
    61  0000                     _LATA5	set	31821
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  01FFA2                     __pcinit:
    67                           	callstack 0
    68  01FFA2                     start_initialization:
    69                           	callstack 0
    70  01FFA2                     __initialization:
    71                           	callstack 0
    72  01FFA2                     end_of_initialization:
    73                           	callstack 0
    74  01FFA2                     __end_of__initialization:
    75                           	callstack 0
    76  01FFA2  0100               	movlb	0
    77  01FFA4  EFDF  F0FF         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000000                     __pcstackCOMRAM:
    81                           	callstack 0
    82  000000                     
    83                           ; 1 bytes @ 0x0
    84 ;;
    85 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    86 ;;
    87 ;; *************** function _main *****************
    88 ;; Defined at:
    89 ;;		line 14 in file "SPI_slave.c"
    90 ;; Parameters:    Size  Location     Type
    91 ;;		None
    92 ;; Auto vars:     Size  Location     Type
    93 ;;  i               2    0        int 
    94 ;; Return value:  Size  Location     Type
    95 ;;                  1    wreg      void 
    96 ;; Registers used:
    97 ;;		wreg, status,2, cstack
    98 ;; Tracked objects:
    99 ;;		On entry : 0/0
   100 ;;		On exit  : 0/0
   101 ;;		Unchanged: 0/0
   102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   107 ;;Total ram usage:        0 bytes
   108 ;; Hardware stack levels required when called:    1
   109 ;; This function calls:
   110 ;;		_SPI_Init_Slave
   111 ;;		_SPI_Read
   112 ;; This function is called by:
   113 ;;		Startup code after reset
   114 ;; This function uses a non-reentrant model
   115 ;;
   116                           
   117                           	psect	text0
   118  01FFBE                     __ptext0:
   119                           	callstack 0
   120  01FFBE                     _main:
   121                           	callstack 30
   122  01FFBE                     
   123                           ;SPI_slave.c: 16:     int i;;SPI_slave.c: 18:     TRISD =0;
   124  01FFBE  0E00               	movlw	0
   125  01FFC0  6E95               	movwf	149,c	;volatile
   126                           
   127                           ;SPI_slave.c: 19:     OSCCON = 0x72;
   128  01FFC2  0E72               	movlw	114
   129  01FFC4  6ED3               	movwf	211,c	;volatile
   130  01FFC6                     
   131                           ;SPI_slave.c: 20:     INTCON2bits.RBPU=0;
   132  01FFC6  9EF1               	bcf	241,7,c	;volatile
   133  01FFC8                     
   134                           ;SPI_slave.c: 21:     SPI_Init_Slave();
   135  01FFC8  ECED  F0FF         	call	_SPI_Init_Slave	;wreg free
   136  01FFCC                     l757:
   137                           
   138                           ;SPI_slave.c: 24:     {;SPI_slave.c: 25:      LATD = SPI_Read();
   139  01FFCC  ECD4  F0FF         	call	_SPI_Read	;wreg free
   140  01FFD0  6E8C               	movwf	140,c	;volatile
   141  01FFD2  EFE6  F0FF         	goto	l757
   142  01FFD6  EF00  F000         	goto	start
   143  01FFDA                     __end_of_main:
   144                           	callstack 0
   145                           
   146 ;; *************** function _SPI_Read *****************
   147 ;; Defined at:
   148 ;;		line 60 in file "SPI_slave.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;		None
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      unsigned char 
   155 ;; Registers used:
   156 ;;		wreg, status,2
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   166 ;;Total ram usage:        0 bytes
   167 ;; Hardware stack levels used:    1
   168 ;; This function calls:
   169 ;;		Nothing
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176  01FFA8                     __ptext1:
   177                           	callstack 0
   178  01FFA8                     _SPI_Read:
   179                           	callstack 30
   180  01FFA8                     
   181                           ;SPI_slave.c: 62:     SSPBUF=0xff;
   182  01FFA8  68C9               	setf	201,c	;volatile
   183  01FFAA                     l52:
   184  01FFAA  A69E               	btfss	158,3,c	;volatile
   185  01FFAC  EFDA  F0FF         	goto	u11
   186  01FFB0  EFDC  F0FF         	goto	u10
   187  01FFB4                     u11:
   188  01FFB4  EFD5  F0FF         	goto	l52
   189  01FFB8                     u10:
   190  01FFB8                     
   191                           ;SPI_slave.c: 64:     PIR1bits.SSPIF=0;
   192  01FFB8  969E               	bcf	158,3,c	;volatile
   193  01FFBA                     
   194                           ;SPI_slave.c: 65:     return(SSPBUF);
   195  01FFBA  50C9               	movf	201,w,c	;volatile
   196  01FFBC  0012               	return		;funcret
   197  01FFBE                     __end_of_SPI_Read:
   198                           	callstack 0
   199                           
   200 ;; *************** function _SPI_Init_Slave *****************
   201 ;; Defined at:
   202 ;;		line 29 in file "SPI_slave.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   220 ;;Total ram usage:        0 bytes
   221 ;; Hardware stack levels used:    1
   222 ;; This function calls:
   223 ;;		Nothing
   224 ;; This function is called by:
   225 ;;		_main
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text2
   230  01FFDA                     __ptext2:
   231                           	callstack 0
   232  01FFDA                     _SPI_Init_Slave:
   233                           	callstack 30
   234  01FFDA                     
   235                           ;SPI_slave.c: 32:     TRISBbits.TRISB0 = 1;
   236  01FFDA  8093               	bsf	147,0,c	;volatile
   237                           
   238                           ;SPI_slave.c: 33:     TRISBbits.TRISB1 = 1;
   239  01FFDC  8293               	bsf	147,1,c	;volatile
   240                           
   241                           ;SPI_slave.c: 34:     TRISAbits.TRISA5 = 1;
   242  01FFDE  8A92               	bsf	146,5,c	;volatile
   243                           
   244                           ;SPI_slave.c: 35:     TRISCbits.TRISC7 = 0;
   245  01FFE0  9E94               	bcf	148,7,c	;volatile
   246                           
   247                           ;SPI_slave.c: 38:     LATA5 = 1;
   248  01FFE2  8A89               	bsf	3977,5,c	;volatile
   249  01FFE4                     
   250                           ;SPI_slave.c: 39:     SSPSTAT=0x40;
   251  01FFE4  0E40               	movlw	64
   252  01FFE6  6EC7               	movwf	199,c	;volatile
   253                           
   254                           ;SPI_slave.c: 40:     SSPCON1=0x24;
   255  01FFE8  0E24               	movlw	36
   256  01FFEA  6EC6               	movwf	198,c	;volatile
   257  01FFEC                     
   258                           ;SPI_slave.c: 42:     PIR1bits.SSPIF=0;
   259  01FFEC  969E               	bcf	158,3,c	;volatile
   260                           
   261                           ;SPI_slave.c: 45:     ADCON0=0;
   262  01FFEE  0E00               	movlw	0
   263  01FFF0  6EC2               	movwf	194,c	;volatile
   264                           
   265                           ;SPI_slave.c: 47:     ADCON1=0x0F;
   266  01FFF2  0E0F               	movlw	15
   267  01FFF4  6EC1               	movwf	193,c	;volatile
   268  01FFF6  0012               	return		;funcret
   269  01FFF8                     __end_of_SPI_Init_Slave:
   270                           	callstack 0
   271  0000                     
   272                           	psect	rparam
   273  0000                     
   274                           	psect	config
   275                           
   276                           ;Config register CONFIG1L @ 0x1FFF8
   277                           ;	Watchdog Timer
   278                           ;	WDTEN = ON, Enabled
   279                           ;	PLL Prescaler Selection
   280                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   281                           ;	PLL Enable Configuration Bit
   282                           ;	CFGPLLEN = OFF, PLL Disabled
   283                           ;	Stack Overflow/Underflow Reset
   284                           ;	STVREN = ON, Enabled
   285                           ;	Extended Instruction Set
   286                           ;	XINST = OFF, Disabled
   287  1FFF8                     	org	131064
   288  1FFF8  BF                 	db	191
   289                           
   290                           ;Config register CONFIG1H @ 0x1FFF9
   291                           ;	CPU System Clock Postscaler
   292                           ;	CPUDIV = OSC1, No CPU system clock divide
   293                           ;	Code Protect
   294                           ;	CP0 = OFF, Program memory is not code-protected
   295  1FFF9                     	org	131065
   296  1FFF9  F7                 	db	247
   297                           
   298                           ;Config register CONFIG2L @ 0x1FFFA
   299                           ;	Oscillator
   300                           ;	OSC = ECPLL, EC+PLL (CLKO-RA6), USB-EC+PLL
   301                           ;	T1OSC/SOSC Power Selection Bits
   302                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
   303                           ;	EC Clock Out Enable Bit
   304                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
   305                           ;	Fail-Safe Clock Monitor
   306                           ;	FCMEN = ON, Enabled
   307                           ;	Internal External Oscillator Switch Over Mode
   308                           ;	IESO = ON, Enabled
   309  1FFFA                     	org	131066
   310  1FFFA  FF                 	db	255
   311                           
   312                           ;Config register CONFIG2H @ 0x1FFFB
   313                           ;	Watchdog Postscaler
   314                           ;	WDTPS = 32768, 1:32768
   315  1FFFB                     	org	131067
   316  1FFFB  FF                 	db	255
   317                           
   318                           ;Config register CONFIG3L @ 0x1FFFC
   319                           ;	DSWDT Clock Select
   320                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
   321                           ;	RTCC Clock Select
   322                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
   323                           ;	Deep Sleep BOR
   324                           ;	DSBOREN = ON, Enabled
   325                           ;	Deep Sleep Watchdog Timer
   326                           ;	DSWDTEN = ON, Enabled
   327                           ;	Deep Sleep Watchdog Postscaler
   328                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
   329  1FFFC                     	org	131068
   330  1FFFC  FF                 	db	255
   331                           
   332                           ;Config register CONFIG3H @ 0x1FFFD
   333                           ;	IOLOCK One-Way Set Enable bit
   334                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
   335                           ;	ADC 10 or 12 Bit Select
   336                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
   337                           ;	MSSP address masking
   338                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
   339  1FFFD                     	org	131069
   340  1FFFD  FB                 	db	251
   341                           
   342                           ;Config register CONFIG4L @ 0x1FFFE
   343                           ;	Write/Erase Protect Page Start/End Location
   344                           ;	WPFP = PAGE_127, Write Protect Program Flash Page 127
   345                           ;	Write/Erase Protect Configuration Region
   346                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
   347  1FFFE                     	org	131070
   348  1FFFE  FF                 	db	255
   349                           
   350                           ;Config register CONFIG4H @ 0x1FFFF
   351                           ;	Write Protect Disable bit
   352                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
   353                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
   354                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
   355                           ;	Low Speed USB mode with 48 MHz system clock bit
   356                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
   357  1FFFF                     	org	131071
   358  1FFFF  FB                 	db	251
   359                           tosu	equ	0xFFF
   360                           tosh	equ	0xFFE
   361                           tosl	equ	0xFFD
   362                           stkptr	equ	0xFFC
   363                           pclatu	equ	0xFFB
   364                           pclath	equ	0xFFA
   365                           pcl	equ	0xFF9
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           prodh	equ	0xFF4
   371                           prodl	equ	0xFF3
   372                           indf0	equ	0xFEF
   373                           postinc0	equ	0xFEE
   374                           postdec0	equ	0xFED
   375                           preinc0	equ	0xFEC
   376                           plusw0	equ	0xFEB
   377                           fsr0h	equ	0xFEA
   378                           fsr0l	equ	0xFE9
   379                           wreg	equ	0xFE8
   380                           indf1	equ	0xFE7
   381                           postinc1	equ	0xFE6
   382                           postdec1	equ	0xFE5
   383                           preinc1	equ	0xFE4
   384                           plusw1	equ	0xFE3
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           bsr	equ	0xFE0
   388                           indf2	equ	0xFDF
   389                           postinc2	equ	0xFDE
   390                           postdec2	equ	0xFDD
   391                           preinc2	equ	0xFDC
   392                           plusw2	equ	0xFDB
   393                           fsr2h	equ	0xFDA
   394                           fsr2l	equ	0xFD9
   395                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                     _SPI_Init_Slave
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Slave                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init_Slave
   _SPI_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 23:29:09 2021

                     l43 FFF6                       l52 FFAA                       l54 FFB8  
                     l55 FFBC                       u10 FFB8                       u11 FFB4  
                    l741 FFE4                      l743 FFEC                      l751 FFBE  
                    l745 FFA8                      l753 FFC6                      l739 FFDA  
                    l747 FFBA                      l755 FFC8                      l757 FFCC  
                   _LATD 000F8C                     _main FFBE   __end_of_SPI_Init_Slave FFF8  
                   start 0000             ___param_bank 000000                    ?_main 0000  
                  _LATA5 007C4D                    _TRISD 000F95         __end_of_SPI_Read FFBE  
        ?_SPI_Init_Slave 0000          __initialization FFA2             __end_of_main FFDA  
                 ??_main 0000            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _OSCCON 000FD3                   _SSPBUF 000FC9  
             __accesstop 0060  __end_of__initialization FFA2            ___rparam_used 000001  
         __pcstackCOMRAM 0000                ?_SPI_Read 0000               ??_SPI_Read 0000  
       ??_SPI_Init_Slave 0000                  _SSPCON1 000FC6                  _SSPSTAT 000FC7  
                __Hparam 0000                  __Lparam 0000                  __pcinit FFA2  
                __ramtop 0F00                  __ptext0 FFBE                  __ptext1 FFA8  
                __ptext2 FFDA     end_of_initialization FFA2                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94        __size_of_SPI_Read 0016  
    start_initialization FFA2                 _PIR1bits 000F9E                 _SPI_Read FFA8  
            _INTCON2bits 000FF1                 __Hrparam 0000  __size_of_SPI_Init_Slave 001E  
               __Lrparam 0000            __size_of_main 001C           _SPI_Init_Slave FFDA  
