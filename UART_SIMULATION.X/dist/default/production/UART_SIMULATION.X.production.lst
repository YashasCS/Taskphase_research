

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jan 27 23:36:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F47J53 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _RCREG	set	4015
    50  0000                     _RCSTA1bits	set	4012
    51  0000                     _RCSTAbits	set	4012
    52  0000                     _TXREG	set	4014
    53  0000                     _RCSTA	set	4012
    54  0000                     _TXSTA	set	4013
    55  0000                     _SPBRG	set	4016
    56  0000                     _TRISCbits	set	3988
    57  0000                     _RCIF	set	31989
    58  0000                     _TXIF	set	31988
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  01FF28                     __pcinit:
    64                           	callstack 0
    65  01FF28                     start_initialization:
    66                           	callstack 0
    67  01FF28                     __initialization:
    68                           	callstack 0
    69  01FF28                     end_of_initialization:
    70                           	callstack 0
    71  01FF28                     __end_of__initialization:
    72                           	callstack 0
    73  01FF28  0100               	movlb	0
    74  01FF2A  EFAB  F0FF         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackBANK0
    77  000060                     __pcstackBANK0:
    78                           	callstack 0
    79  000060                     main@rc_data:
    80                           	callstack 0
    81                           
    82                           ; 100 bytes @ 0x0
    83  000060                     	ds	100
    84  0000C4                     main@i:
    85                           	callstack 0
    86                           
    87                           ; 2 bytes @ 0x64
    88  0000C4                     	ds	2
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	callstack 0
    93  000001                     USART_TxChar@out:
    94                           	callstack 0
    95                           
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	1
    98  000002                     
    99                           ; 1 bytes @ 0x1
   100  000002                     	ds	1
   101                           
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 38 in file "UART_SIMULATION.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;  rc_data       100    0[BANK0 ] unsigned char [100]
   112 ;;  i               2  100[BANK0 ] unsigned int 
   113 ;;  out             1    0        unsigned char 
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   124 ;;      Locals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   126 ;;      Totals:         1     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   127 ;;Total ram usage:      103 bytes
   128 ;; Hardware stack levels required when called:    1
   129 ;; This function calls:
   130 ;;		_USART_Init
   131 ;;		_USART_TxChar
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138  01FF56                     __ptext0:
   139                           	callstack 0
   140  01FF56                     _main:
   141                           	callstack 30
   142  01FF56                     
   143                           ;UART_SIMULATION.c: 41: char out;;UART_SIMULATION.c: 42: char rc_data[100];;UART_SIMULAT
      +                          ION.c: 43: unsigned int i;;UART_SIMULATION.c: 44: USART_Init();
   144  01FF56  EC97  F0FF         	call	_USART_Init	;wreg free
   145  01FF5A                     
   146                           ;UART_SIMULATION.c: 46: for(i=0;;i++)
   147  01FF5A  0E00               	movlw	0
   148  01FF5C  0100               	movlb	0	; () banked
   149  01FF5E  6FC5               	movwf	(main@i+1)& (0+255),b
   150  01FF60  0E00               	movlw	0
   151  01FF62  6FC4               	movwf	main@i& (0+255),b
   152  01FF64                     l44:
   153  01FF64  AA9E               	btfss	3998,5,c	;volatile
   154  01FF66  EFB7  F0FF         	goto	u81
   155  01FF6A  EFB9  F0FF         	goto	u80
   156  01FF6E                     u81:
   157  01FF6E  EFB2  F0FF         	goto	l44
   158  01FF72                     u80:
   159  01FF72                     
   160                           ;UART_SIMULATION.c: 49:     rc_data[i]=RCREG;
   161  01FF72  0E60               	movlw	low main@rc_data
   162  01FF74  0100               	movlb	0	; () banked
   163  01FF76  25C4               	addwf	main@i& (0+255),w,b
   164  01FF78  6ED9               	movwf	fsr2l,c
   165  01FF7A  0E00               	movlw	high main@rc_data
   166  01FF7C  21C5               	addwfc	(main@i+1)& (0+255),w,b
   167  01FF7E  6EDA               	movwf	fsr2h,c
   168  01FF80  CFAF FFDF          	movff	4015,indf2	;volatile
   169                           
   170                           ;UART_SIMULATION.c: 50:     if(rc_data[i]=='\r')
   171  01FF84  0E60               	movlw	low main@rc_data
   172  01FF86  25C4               	addwf	main@i& (0+255),w,b
   173  01FF88  6ED9               	movwf	fsr2l,c
   174  01FF8A  0E00               	movlw	high main@rc_data
   175  01FF8C  21C5               	addwfc	(main@i+1)& (0+255),w,b
   176  01FF8E  6EDA               	movwf	fsr2h,c
   177  01FF90  0E0D               	movlw	13
   178  01FF92  18DE               	xorwf	postinc2,w,c
   179  01FF94  A4D8               	btfss	status,2,c
   180  01FF96  EFCF  F0FF         	goto	u91
   181  01FF9A  EFD1  F0FF         	goto	u90
   182  01FF9E                     u91:
   183  01FF9E  EFDB  F0FF         	goto	l781
   184  01FFA2                     u90:
   185  01FFA2                     
   186                           ; BSR set to: 0
   187                           ;UART_SIMULATION.c: 51:     {;UART_SIMULATION.c: 52:         rc_data[i]='\0';
   188  01FFA2  0E60               	movlw	low main@rc_data
   189  01FFA4  25C4               	addwf	main@i& (0+255),w,b
   190  01FFA6  6ED9               	movwf	fsr2l,c
   191  01FFA8  0E00               	movlw	high main@rc_data
   192  01FFAA  21C5               	addwfc	(main@i+1)& (0+255),w,b
   193  01FFAC  6EDA               	movwf	fsr2h,c
   194  01FFAE  0E00               	movlw	0
   195  01FFB0  6EDF               	movwf	indf2,c
   196                           
   197                           ;UART_SIMULATION.c: 53:         break;
   198  01FFB2  EFDF  F0FF         	goto	l783
   199  01FFB6                     l781:
   200                           
   201                           ; BSR set to: 0
   202                           ;UART_SIMULATION.c: 55: }
   203  01FFB6  4BC4               	infsnz	main@i& (0+255),f,b
   204  01FFB8  2BC5               	incf	(main@i+1)& (0+255),f,b
   205  01FFBA  EFB2  F0FF         	goto	l44
   206  01FFBE                     l783:
   207                           
   208                           ; BSR set to: 0
   209                           ;UART_SIMULATION.c: 56: for(i=0;i<100;i++)
   210  01FFBE  0E00               	movlw	0
   211  01FFC0  6FC5               	movwf	(main@i+1)& (0+255),b
   212  01FFC2  0E00               	movlw	0
   213  01FFC4  6FC4               	movwf	main@i& (0+255),b
   214  01FFC6                     l789:
   215                           
   216                           ; BSR set to: 0
   217                           ;UART_SIMULATION.c: 57: {;UART_SIMULATION.c: 58:     USART_TxChar(rc_data[i]);
   218  01FFC6  0E60               	movlw	low main@rc_data
   219  01FFC8  25C4               	addwf	main@i& (0+255),w,b
   220  01FFCA  6ED9               	movwf	fsr2l,c
   221  01FFCC  0E00               	movlw	high main@rc_data
   222  01FFCE  21C5               	addwfc	(main@i+1)& (0+255),w,b
   223  01FFD0  6EDA               	movwf	fsr2h,c
   224  01FFD2  50DF               	movf	indf2,w,c
   225  01FFD4  ECA0  F0FF         	call	_USART_TxChar
   226  01FFD8                     
   227                           ;UART_SIMULATION.c: 59: }
   228  01FFD8  0100               	movlb	0	; () banked
   229  01FFDA  4BC4               	infsnz	main@i& (0+255),f,b
   230  01FFDC  2BC5               	incf	(main@i+1)& (0+255),f,b
   231  01FFDE                     
   232                           ; BSR set to: 0
   233  01FFDE  51C5               	movf	(main@i+1)& (0+255),w,b
   234  01FFE0  E109               	bnz	u100
   235  01FFE2  0E64               	movlw	100
   236  01FFE4  5DC4               	subwf	main@i& (0+255),w,b
   237  01FFE6  A0D8               	btfss	status,0,c
   238  01FFE8  EFF8  F0FF         	goto	u101
   239  01FFEC  EFFA  F0FF         	goto	u100
   240  01FFF0                     u101:
   241  01FFF0  EFE3  F0FF         	goto	l789
   242  01FFF4                     u100:
   243  01FFF4                     
   244                           ; BSR set to: 0
   245  01FFF4  EF00  F000         	goto	start
   246  01FFF8                     __end_of_main:
   247                           	callstack 0
   248                           
   249 ;; *************** function _USART_TxChar *****************
   250 ;; Defined at:
   251 ;;		line 19 in file "UART_SIMULATION.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;  out             1    wreg     unsigned char 
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  out             1    0[COMRAM] unsigned char 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   269 ;;Total ram usage:        1 bytes
   270 ;; Hardware stack levels used:    1
   271 ;; This function calls:
   272 ;;		Nothing
   273 ;; This function is called by:
   274 ;;		_main
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           	psect	text1
   279  01FF40                     __ptext1:
   280                           	callstack 0
   281  01FF40                     _USART_TxChar:
   282                           	callstack 30
   283                           
   284                           ; BSR set to: 0
   285                           ;incstack = 0
   286                           ;USART_TxChar@out stored from wreg
   287  01FF40  6E01               	movwf	USART_TxChar@out^0,c
   288  01FF42                     l28:
   289  01FF42  A89E               	btfss	3998,4,c	;volatile
   290  01FF44  EFA6  F0FF         	goto	u71
   291  01FF48  EFA8  F0FF         	goto	u70
   292  01FF4C                     u71:
   293  01FF4C  EFA1  F0FF         	goto	l28
   294  01FF50                     u70:
   295  01FF50                     
   296                           ;UART_SIMULATION.c: 22:         TXREG=out;
   297  01FF50  C001  FFAE         	movff	USART_TxChar@out,4014	;volatile
   298  01FF54  0012               	return		;funcret
   299  01FF56                     __end_of_USART_TxChar:
   300                           	callstack 0
   301                           
   302 ;; *************** function _USART_Init *****************
   303 ;; Defined at:
   304 ;;		line 6 in file "UART_SIMULATION.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, status,2
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels used:    1
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text2
   332  01FF2E                     __ptext2:
   333                           	callstack 0
   334  01FF2E                     _USART_Init:
   335                           	callstack 30
   336  01FF2E                     
   337                           ;UART_SIMULATION.c: 9:     TRISCbits.TRISC6=0;
   338  01FF2E  9C94               	bcf	148,6,c	;volatile
   339                           
   340                           ;UART_SIMULATION.c: 10:     TRISCbits.TRISC7=1;
   341  01FF30  8E94               	bsf	148,7,c	;volatile
   342  01FF32                     
   343                           ;UART_SIMULATION.c: 14:     SPBRG = 32;
   344  01FF32  0E20               	movlw	32
   345  01FF34  6EB0               	movwf	176,c	;volatile
   346                           
   347                           ;UART_SIMULATION.c: 16:     TXSTA = 0x20;
   348  01FF36  0E20               	movlw	32
   349  01FF38  6EAD               	movwf	173,c	;volatile
   350                           
   351                           ;UART_SIMULATION.c: 17:     RCSTA = 0x90;
   352  01FF3A  0E90               	movlw	144
   353  01FF3C  6EAC               	movwf	172,c	;volatile
   354  01FF3E  0012               	return		;funcret
   355  01FF40                     __end_of_USART_Init:
   356                           	callstack 0
   357  0000                     
   358                           	psect	rparam
   359  0000                     
   360                           	psect	config
   361                           
   362                           ;Config register CONFIG1L @ 0x1FFF8
   363                           ;	Watchdog Timer
   364                           ;	WDTEN = ON, Enabled
   365                           ;	PLL Prescaler Selection
   366                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   367                           ;	PLL Enable Configuration Bit
   368                           ;	CFGPLLEN = OFF, PLL Disabled
   369                           ;	Stack Overflow/Underflow Reset
   370                           ;	STVREN = ON, Enabled
   371                           ;	Extended Instruction Set
   372                           ;	XINST = OFF, Disabled
   373  1FFF8                     	org	131064
   374  1FFF8  BF                 	db	191
   375                           
   376                           ;Config register CONFIG1H @ 0x1FFF9
   377                           ;	CPU System Clock Postscaler
   378                           ;	CPUDIV = OSC1, No CPU system clock divide
   379                           ;	Code Protect
   380                           ;	CP0 = OFF, Program memory is not code-protected
   381  1FFF9                     	org	131065
   382  1FFF9  F7                 	db	247
   383                           
   384                           ;Config register CONFIG2L @ 0x1FFFA
   385                           ;	Oscillator
   386                           ;	OSC = ECPLL, EC+PLL (CLKO-RA6), USB-EC+PLL
   387                           ;	T1OSC/SOSC Power Selection Bits
   388                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
   389                           ;	EC Clock Out Enable Bit
   390                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
   391                           ;	Fail-Safe Clock Monitor
   392                           ;	FCMEN = ON, Enabled
   393                           ;	Internal External Oscillator Switch Over Mode
   394                           ;	IESO = ON, Enabled
   395  1FFFA                     	org	131066
   396  1FFFA  FF                 	db	255
   397                           
   398                           ;Config register CONFIG2H @ 0x1FFFB
   399                           ;	Watchdog Postscaler
   400                           ;	WDTPS = 32768, 1:32768
   401  1FFFB                     	org	131067
   402  1FFFB  FF                 	db	255
   403                           
   404                           ;Config register CONFIG3L @ 0x1FFFC
   405                           ;	DSWDT Clock Select
   406                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
   407                           ;	RTCC Clock Select
   408                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
   409                           ;	Deep Sleep BOR
   410                           ;	DSBOREN = ON, Enabled
   411                           ;	Deep Sleep Watchdog Timer
   412                           ;	DSWDTEN = ON, Enabled
   413                           ;	Deep Sleep Watchdog Postscaler
   414                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
   415  1FFFC                     	org	131068
   416  1FFFC  FF                 	db	255
   417                           
   418                           ;Config register CONFIG3H @ 0x1FFFD
   419                           ;	IOLOCK One-Way Set Enable bit
   420                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
   421                           ;	ADC 10 or 12 Bit Select
   422                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
   423                           ;	MSSP address masking
   424                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
   425  1FFFD                     	org	131069
   426  1FFFD  FB                 	db	251
   427                           
   428                           ;Config register CONFIG4L @ 0x1FFFE
   429                           ;	Write/Erase Protect Page Start/End Location
   430                           ;	WPFP = PAGE_127, Write Protect Program Flash Page 127
   431                           ;	Write/Erase Protect Configuration Region
   432                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
   433  1FFFE                     	org	131070
   434  1FFFE  FF                 	db	255
   435                           
   436                           ;Config register CONFIG4H @ 0x1FFFF
   437                           ;	Write Protect Disable bit
   438                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
   439                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
   440                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
   441                           ;	Low Speed USB mode with 48 MHz system clock bit
   442                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
   443  1FFFF                     	org	131071
   444  1FFFF  FB                 	db	251
   445                           tosu	equ	0xFFF
   446                           tosh	equ	0xFFE
   447                           tosl	equ	0xFFD
   448                           stkptr	equ	0xFFC
   449                           pclatu	equ	0xFFB
   450                           pclath	equ	0xFFA
   451                           pcl	equ	0xFF9
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           prodh	equ	0xFF4
   457                           prodl	equ	0xFF3
   458                           indf0	equ	0xFEF
   459                           postinc0	equ	0xFEE
   460                           postdec0	equ	0xFED
   461                           preinc0	equ	0xFEC
   462                           plusw0	equ	0xFEB
   463                           fsr0h	equ	0xFEA
   464                           fsr0l	equ	0xFE9
   465                           wreg	equ	0xFE8
   466                           indf1	equ	0xFE7
   467                           postinc1	equ	0xFE6
   468                           postdec1	equ	0xFE5
   469                           preinc1	equ	0xFE4
   470                           plusw1	equ	0xFE3
   471                           fsr1h	equ	0xFE2
   472                           fsr1l	equ	0xFE1
   473                           bsr	equ	0xFE0
   474                           indf2	equ	0xFDF
   475                           postinc2	equ	0xFDE
   476                           postdec2	equ	0xFDD
   477                           preinc2	equ	0xFDC
   478                           plusw2	equ	0xFDB
   479                           fsr2h	equ	0xFDA
   480                           fsr2l	equ	0xFD9
   481                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160    102     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_TxChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0     252
                                              1 COMRAM     1     1      0
                                              0 BANK0    102   102      0
                         _USART_Init
                       _USART_TxChar
 ---------------------------------------------------------------------------------
 (1) _USART_TxChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
   _USART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      66       5       63.7%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jan 27 23:36:34 2021

                     l31 FF54                       l25 FF3E                       l51 FFF4  
                     l28 FF42                       l44 FF64                       u70 FF50  
                     u71 FF4C                       u80 FF72                       u81 FF6E  
                     u90 FFA2                       u91 FF9E                      l771 FF50  
                    l765 FF2E                      l781 FFB6                      l773 FF56  
                    l767 FF32                      l791 FFD8                      l783 FFBE  
                    l775 FF5A                      l769 FF42                      l793 FFDE  
                    l777 FF72                      l779 FFA2                      l789 FFC6  
                    u100 FFF4                      u101 FFF0                     _RCIF 007CF5  
            main@rc_data 0060                     _TXIF 007CF4                     _main FF56  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _RCREG 000FAF  
                  _RCSTA 000FAC                    _SPBRG 000FB0                    _TXREG 000FAE  
                  _TXSTA 000FAD                    main@i 00C4                    status 000FD8  
            ?_USART_Init 0001          __initialization FF28             __end_of_main FFF8  
                 ??_main 0002            __activetblptr 000000      __size_of_USART_Init 0012  
             __accesstop 0060  __end_of__initialization FF28            ___rparam_used 000001  
         __pcstackCOMRAM 0001             ??_USART_Init 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit FF28                  __ramtop 0F00  
                __ptext0 FF56                  __ptext1 FF40                  __ptext2 FF2E  
     __end_of_USART_Init FF40     end_of_initialization FF28                _RCSTAbits 000FAC  
                postinc2 000FDE                _TRISCbits 000F94            ?_USART_TxChar 0001  
    start_initialization FF28           ??_USART_TxChar 0001            __pcstackBANK0 0060  
   __end_of_USART_TxChar FF56                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 00A2          USART_TxChar@out 0001               _RCSTA1bits 000FAC  
  __size_of_USART_TxChar 0016             _USART_TxChar FF40               _USART_Init FF2E  
