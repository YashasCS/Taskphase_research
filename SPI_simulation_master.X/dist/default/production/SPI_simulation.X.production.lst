

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 23:08:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F47J53 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _SSPBUF	set	4041
    50  0000                     _ADCON1	set	4033
    51  0000                     _ADCON0	set	4034
    52  0000                     _PIR1bits	set	3998
    53  0000                     _SSPCON1	set	4038
    54  0000                     _SSPSTAT	set	4039
    55  0000                     _TRISCbits	set	3988
    56  0000                     _TRISAbits	set	3986
    57  0000                     _TRISBbits	set	3987
    58  0000                     _INTCON2bits	set	4081
    59  0000                     _OSCCON	set	4051
    60  0000                     _LATA5	set	31821
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  01FF14                     __pcinit:
    66                           	callstack 0
    67  01FF14                     start_initialization:
    68                           	callstack 0
    69  01FF14                     __initialization:
    70                           	callstack 0
    71  01FF14                     end_of_initialization:
    72                           	callstack 0
    73  01FF14                     __end_of__initialization:
    74                           	callstack 0
    75  01FF14  0100               	movlb	0
    76  01FF16  EFCE  F0FF         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81  000001                     MSdelay@val:
    82                           	callstack 0
    83                           
    84                           ; 2 bytes @ 0x0
    85  000001                     	ds	1
    86  000002                     SPI_Write@x:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x1
    90  000002                     	ds	1
    91  000003                     MSdelay@i:
    92                           	callstack 0
    93                           
    94                           ; 2 bytes @ 0x2
    95  000003                     	ds	2
    96  000005                     MSdelay@j:
    97                           	callstack 0
    98                           
    99                           ; 2 bytes @ 0x4
   100  000005                     	ds	2
   101  000007                     main@i:
   102                           	callstack 0
   103                           
   104                           ; 2 bytes @ 0x6
   105  000007                     	ds	2
   106                           
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 11 in file "SPI.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;  i               2    6[COMRAM] int 
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0, cstack
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   130 ;;Total ram usage:        2 bytes
   131 ;; Hardware stack levels required when called:    1
   132 ;; This function calls:
   133 ;;		_MSdelay
   134 ;;		_SPI_Init_Master
   135 ;;		_SPI_Write
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142  01FF9C                     __ptext0:
   143                           	callstack 0
   144  01FF9C                     _main:
   145                           	callstack 30
   146  01FF9C                     
   147                           ;SPI.c: 13:     int i;;SPI.c: 14:     OSCCON = 0x72;
   148  01FF9C  0E72               	movlw	114
   149  01FF9E  6ED3               	movwf	211,c	;volatile
   150  01FFA0                     
   151                           ;SPI.c: 15:     INTCON2bits.RBPU=0;
   152  01FFA0  9EF1               	bcf	241,7,c	;volatile
   153  01FFA2                     
   154                           ;SPI.c: 16:     SPI_Init_Master();
   155  01FFA2  EC9A  F0FF         	call	_SPI_Init_Master	;wreg free
   156  01FFA6                     
   157                           ;SPI.c: 17:     MSdelay(10);
   158  01FFA6  0E00               	movlw	0
   159  01FFA8  6E02               	movwf	(MSdelay@val+1)^0,c
   160  01FFAA  0E0A               	movlw	10
   161  01FFAC  6E01               	movwf	MSdelay@val^0,c
   162  01FFAE  ECA9  F0FF         	call	_MSdelay	;wreg free
   163  01FFB2                     l819:
   164                           
   165                           ;SPI.c: 20:     {;SPI.c: 21:         LATA5 = 0;
   166  01FFB2  9A89               	bcf	3977,5,c	;volatile
   167  01FFB4                     
   168                           ;SPI.c: 22:         for(i=0;i<=15;i++)
   169  01FFB4  0E00               	movlw	0
   170  01FFB6  6E08               	movwf	(main@i+1)^0,c
   171  01FFB8  0E00               	movlw	0
   172  01FFBA  6E07               	movwf	main@i^0,c
   173  01FFBC                     l827:
   174                           
   175                           ;SPI.c: 23:         {;SPI.c: 24:             SPI_Write(i);
   176  01FFBC  5007               	movf	main@i^0,w,c
   177  01FFBE  EC8D  F0FF         	call	_SPI_Write
   178  01FFC2                     
   179                           ;SPI.c: 25:             MSdelay(1000);
   180  01FFC2  0E03               	movlw	3
   181  01FFC4  6E02               	movwf	(MSdelay@val+1)^0,c
   182  01FFC6  0EE8               	movlw	232
   183  01FFC8  6E01               	movwf	MSdelay@val^0,c
   184  01FFCA  ECA9  F0FF         	call	_MSdelay	;wreg free
   185  01FFCE                     
   186                           ;SPI.c: 26:         }
   187  01FFCE  4A07               	infsnz	main@i^0,f,c
   188  01FFD0  2A08               	incf	(main@i+1)^0,f,c
   189  01FFD2  BE08               	btfsc	(main@i+1)^0,7,c
   190  01FFD4  EFF5  F0FF         	goto	u81
   191  01FFD8  5008               	movf	(main@i+1)^0,w,c
   192  01FFDA  E109               	bnz	u80
   193  01FFDC  0E10               	movlw	16
   194  01FFDE  5C07               	subwf	main@i^0,w,c
   195  01FFE0  A0D8               	btfss	status,0,c
   196  01FFE2  EFF5  F0FF         	goto	u81
   197  01FFE6  EFF7  F0FF         	goto	u80
   198  01FFEA                     u81:
   199  01FFEA  EFDE  F0FF         	goto	l827
   200  01FFEE                     u80:
   201  01FFEE                     
   202                           ;SPI.c: 27:         LATA5 = 1;
   203  01FFEE  8A89               	bsf	3977,5,c	;volatile
   204  01FFF0  EFD9  F0FF         	goto	l819
   205  01FFF4  EF00  F000         	goto	start
   206  01FFF8                     __end_of_main:
   207                           	callstack 0
   208                           
   209 ;; *************** function _SPI_Write *****************
   210 ;; Defined at:
   211 ;;		line 55 in file "SPI.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;  x               1    wreg     unsigned char 
   214 ;; Auto vars:     Size  Location     Type
   215 ;;  x               1    1[COMRAM] unsigned char 
   216 ;;  data_flush      1    0        unsigned char 
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   230 ;;Total ram usage:        2 bytes
   231 ;; Hardware stack levels used:    1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		_main
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text1
   240  01FF1A                     __ptext1:
   241                           	callstack 0
   242  01FF1A                     _SPI_Write:
   243                           	callstack 30
   244                           
   245                           ;incstack = 0
   246                           ;SPI_Write@x stored from wreg
   247  01FF1A  6E02               	movwf	SPI_Write@x^0,c
   248  01FF1C                     
   249                           ;SPI.c: 55: void SPI_Write(unsigned char x);SPI.c: 56: {;SPI.c: 57:     unsigned char da
      +                          ta_flush;;SPI.c: 58:     SSPBUF=x;
   250  01FF1C  C002  FFC9         	movff	SPI_Write@x,4041	;volatile
   251  01FF20                     l46:
   252  01FF20  A69E               	btfss	158,3,c	;volatile
   253  01FF22  EF95  F0FF         	goto	u31
   254  01FF26  EF97  F0FF         	goto	u30
   255  01FF2A                     u31:
   256  01FF2A  EF90  F0FF         	goto	l46
   257  01FF2E                     u30:
   258  01FF2E                     
   259                           ;SPI.c: 61:     PIR1bits.SSPIF=0;
   260  01FF2E  969E               	bcf	158,3,c	;volatile
   261  01FF30  50C9               	movf	201,w,c	;volatile
   262  01FF32  0012               	return		;funcret
   263  01FF34                     __end_of_SPI_Write:
   264                           	callstack 0
   265                           
   266 ;; *************** function _SPI_Init_Master *****************
   267 ;; Defined at:
   268 ;;		line 33 in file "SPI.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text2
   296  01FF34                     __ptext2:
   297                           	callstack 0
   298  01FF34                     _SPI_Init_Master:
   299                           	callstack 30
   300  01FF34                     
   301                           ;SPI.c: 36:     TRISBbits.TRISB0 = 1;
   302  01FF34  8093               	bsf	147,0,c	;volatile
   303                           
   304                           ;SPI.c: 37:     TRISBbits.TRISB1 = 0;
   305  01FF36  9293               	bcf	147,1,c	;volatile
   306                           
   307                           ;SPI.c: 38:     TRISAbits.TRISA5 = 0;
   308  01FF38  9A92               	bcf	146,5,c	;volatile
   309                           
   310                           ;SPI.c: 39:     TRISCbits.TRISC7 = 0;
   311  01FF3A  9E94               	bcf	148,7,c	;volatile
   312                           
   313                           ;SPI.c: 42:     LATA5 = 1;
   314  01FF3C  8A89               	bsf	3977,5,c	;volatile
   315  01FF3E                     
   316                           ;SPI.c: 43:     SSPSTAT=0x40;
   317  01FF3E  0E40               	movlw	64
   318  01FF40  6EC7               	movwf	199,c	;volatile
   319                           
   320                           ;SPI.c: 44:     SSPCON1=0x22;
   321  01FF42  0E22               	movlw	34
   322  01FF44  6EC6               	movwf	198,c	;volatile
   323  01FF46                     
   324                           ;SPI.c: 46:     PIR1bits.SSPIF=0;
   325  01FF46  969E               	bcf	158,3,c	;volatile
   326                           
   327                           ;SPI.c: 50:     ADCON0=0;
   328  01FF48  0E00               	movlw	0
   329  01FF4A  6EC2               	movwf	194,c	;volatile
   330                           
   331                           ;SPI.c: 52:     ADCON1=0x0F;
   332  01FF4C  0E0F               	movlw	15
   333  01FF4E  6EC1               	movwf	193,c	;volatile
   334  01FF50  0012               	return		;funcret
   335  01FF52                     __end_of_SPI_Init_Master:
   336                           	callstack 0
   337                           
   338 ;; *************** function _MSdelay *****************
   339 ;; Defined at:
   340 ;;		line 74 in file "SPI.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;  val             2    0[COMRAM] unsigned int 
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  j               2    4[COMRAM] unsigned int 
   345 ;;  i               2    2[COMRAM] unsigned int 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   356 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   359 ;;Total ram usage:        6 bytes
   360 ;; Hardware stack levels used:    1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text3
   369  01FF52                     __ptext3:
   370                           	callstack 0
   371  01FF52                     _MSdelay:
   372                           	callstack 30
   373  01FF52                     
   374                           ;SPI.c: 74: void MSdelay(unsigned int val);SPI.c: 75: {;SPI.c: 76:      unsigned int i,j
      +                          ;;SPI.c: 77:         for(i=0;i<val;i++)
   375  01FF52  0E00               	movlw	0
   376  01FF54  6E04               	movwf	(MSdelay@i+1)^0,c
   377  01FF56  0E00               	movlw	0
   378  01FF58  6E03               	movwf	MSdelay@i^0,c
   379  01FF5A  EFC2  F0FF         	goto	l809
   380  01FF5E                     l797:
   381                           
   382                           ;SPI.c: 78:             for(j=0;j<165;j++);
   383  01FF5E  0E00               	movlw	0
   384  01FF60  6E06               	movwf	(MSdelay@j+1)^0,c
   385  01FF62  0E00               	movlw	0
   386  01FF64  6E05               	movwf	MSdelay@j^0,c
   387  01FF66                     l803:
   388  01FF66  4A05               	infsnz	MSdelay@j^0,f,c
   389  01FF68  2A06               	incf	(MSdelay@j+1)^0,f,c
   390  01FF6A  5006               	movf	(MSdelay@j+1)^0,w,c
   391  01FF6C  E109               	bnz	u60
   392  01FF6E  0EA5               	movlw	165
   393  01FF70  5C05               	subwf	MSdelay@j^0,w,c
   394  01FF72  A0D8               	btfss	status,0,c
   395  01FF74  EFBE  F0FF         	goto	u61
   396  01FF78  EFC0  F0FF         	goto	u60
   397  01FF7C                     u61:
   398  01FF7C  EFB3  F0FF         	goto	l803
   399  01FF80                     u60:
   400  01FF80  4A03               	infsnz	MSdelay@i^0,f,c
   401  01FF82  2A04               	incf	(MSdelay@i+1)^0,f,c
   402  01FF84                     l809:
   403  01FF84  5001               	movf	MSdelay@val^0,w,c
   404  01FF86  5C03               	subwf	MSdelay@i^0,w,c
   405  01FF88  5002               	movf	(MSdelay@val+1)^0,w,c
   406  01FF8A  5804               	subwfb	(MSdelay@i+1)^0,w,c
   407  01FF8C  A0D8               	btfss	status,0,c
   408  01FF8E  EFCB  F0FF         	goto	u71
   409  01FF92  EFCD  F0FF         	goto	u70
   410  01FF96                     u71:
   411  01FF96  EFAF  F0FF         	goto	l797
   412  01FF9A                     u70:
   413  01FF9A  0012               	return		;funcret
   414  01FF9C                     __end_of_MSdelay:
   415                           	callstack 0
   416  0000                     
   417                           	psect	rparam
   418  0000                     
   419                           	psect	config
   420                           
   421                           ;Config register CONFIG1L @ 0x1FFF8
   422                           ;	Watchdog Timer
   423                           ;	WDTEN = ON, Enabled
   424                           ;	PLL Prescaler Selection
   425                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   426                           ;	PLL Enable Configuration Bit
   427                           ;	CFGPLLEN = OFF, PLL Disabled
   428                           ;	Stack Overflow/Underflow Reset
   429                           ;	STVREN = ON, Enabled
   430                           ;	Extended Instruction Set
   431                           ;	XINST = OFF, Disabled
   432  1FFF8                     	org	131064
   433  1FFF8  BF                 	db	191
   434                           
   435                           ;Config register CONFIG1H @ 0x1FFF9
   436                           ;	CPU System Clock Postscaler
   437                           ;	CPUDIV = OSC1, No CPU system clock divide
   438                           ;	Code Protect
   439                           ;	CP0 = OFF, Program memory is not code-protected
   440  1FFF9                     	org	131065
   441  1FFF9  F7                 	db	247
   442                           
   443                           ;Config register CONFIG2L @ 0x1FFFA
   444                           ;	Oscillator
   445                           ;	OSC = ECPLL, EC+PLL (CLKO-RA6), USB-EC+PLL
   446                           ;	T1OSC/SOSC Power Selection Bits
   447                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
   448                           ;	EC Clock Out Enable Bit
   449                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
   450                           ;	Fail-Safe Clock Monitor
   451                           ;	FCMEN = ON, Enabled
   452                           ;	Internal External Oscillator Switch Over Mode
   453                           ;	IESO = ON, Enabled
   454  1FFFA                     	org	131066
   455  1FFFA  FF                 	db	255
   456                           
   457                           ;Config register CONFIG2H @ 0x1FFFB
   458                           ;	Watchdog Postscaler
   459                           ;	WDTPS = 32768, 1:32768
   460  1FFFB                     	org	131067
   461  1FFFB  FF                 	db	255
   462                           
   463                           ;Config register CONFIG3L @ 0x1FFFC
   464                           ;	DSWDT Clock Select
   465                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
   466                           ;	RTCC Clock Select
   467                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
   468                           ;	Deep Sleep BOR
   469                           ;	DSBOREN = ON, Enabled
   470                           ;	Deep Sleep Watchdog Timer
   471                           ;	DSWDTEN = ON, Enabled
   472                           ;	Deep Sleep Watchdog Postscaler
   473                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
   474  1FFFC                     	org	131068
   475  1FFFC  FF                 	db	255
   476                           
   477                           ;Config register CONFIG3H @ 0x1FFFD
   478                           ;	IOLOCK One-Way Set Enable bit
   479                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
   480                           ;	ADC 10 or 12 Bit Select
   481                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
   482                           ;	MSSP address masking
   483                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
   484  1FFFD                     	org	131069
   485  1FFFD  FB                 	db	251
   486                           
   487                           ;Config register CONFIG4L @ 0x1FFFE
   488                           ;	Write/Erase Protect Page Start/End Location
   489                           ;	WPFP = PAGE_127, Write Protect Program Flash Page 127
   490                           ;	Write/Erase Protect Configuration Region
   491                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
   492  1FFFE                     	org	131070
   493  1FFFE  FF                 	db	255
   494                           
   495                           ;Config register CONFIG4H @ 0x1FFFF
   496                           ;	Write Protect Disable bit
   497                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
   498                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
   499                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
   500                           ;	Low Speed USB mode with 48 MHz system clock bit
   501                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
   502  1FFFF                     	org	131071
   503  1FFFF  FB                 	db	251
   504                           tosu	equ	0xFFF
   505                           tosh	equ	0xFFE
   506                           tosl	equ	0xFFD
   507                           stkptr	equ	0xFFC
   508                           pclatu	equ	0xFFB
   509                           pclath	equ	0xFFA
   510                           pcl	equ	0xFF9
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           prodh	equ	0xFF4
   516                           prodl	equ	0xFF3
   517                           indf0	equ	0xFEF
   518                           postinc0	equ	0xFEE
   519                           postdec0	equ	0xFED
   520                           preinc0	equ	0xFEC
   521                           plusw0	equ	0xFEB
   522                           fsr0h	equ	0xFEA
   523                           fsr0l	equ	0xFE9
   524                           wreg	equ	0xFE8
   525                           indf1	equ	0xFE7
   526                           postinc1	equ	0xFE6
   527                           postdec1	equ	0xFE5
   528                           preinc1	equ	0xFE4
   529                           plusw1	equ	0xFE3
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           bsr	equ	0xFE0
   533                           indf2	equ	0xFDF
   534                           postinc2	equ	0xFDE
   535                           postdec2	equ	0xFDD
   536                           preinc2	equ	0xFDC
   537                           plusw2	equ	0xFDB
   538                           fsr2h	equ	0xFDA
   539                           fsr2l	equ	0xFD9
   540                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     328
                                              6 COMRAM     2     2      0
                            _MSdelay
                    _SPI_Init_Master
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     244
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _SPI_Init_Master
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 23:08:55 2021

                      l43 FF50                        l37 FFEE                        l46 FF20  
                      l63 FF9A                        l48 FF2E                        l49 FF32  
                      u30 FF2E                        u31 FF2A                        u60 FF80  
                      u61 FF7C                        u70 FF9A                        u71 FF96  
                      u80 FFEE                        u81 FFEA                       l803 FF66  
                     l811 FF9C                       l805 FF6A                       l741 FF3E  
                     l821 FFB4                       l813 FFA0                       l807 FF80  
                     l743 FF46                       l831 FFCE                       l815 FFA2  
                     l809 FF84                       l761 FF1C                       l833 FFD2  
                     l817 FFA6                       l739 FF34                       l835 FFF0  
                     l827 FFBC                       l819 FFB2                       l829 FFC2  
                     l795 FF52                       l797 FF5E                      _main FF9C  
                    start 0000           __end_of_MSdelay FF9C              ___param_bank 000000  
                   ?_main 0001                     _LATA5 007C4D   __end_of_SPI_Init_Master FF52  
                   main@i 0007                     status 000FD8        __size_of_SPI_Write 001A  
         __initialization FF14              __end_of_main FFF8                    ??_main 0007  
           __activetblptr 000000                    _ADCON0 000FC2                    _ADCON1 000FC1  
               ??_MSdelay 0003                    _OSCCON 000FD3                    _SSPBUF 000FC9  
       __end_of_SPI_Write FF34          ?_SPI_Init_Master 0001                __accesstop 0060  
 __end_of__initialization FF14             ___rparam_used 000001            __pcstackCOMRAM 0001  
                 _SSPCON1 000FC6                   _SSPSTAT 000FC7                   _MSdelay FF52  
                 __Hparam 0000                   __Lparam 0000                   __pcinit FF14  
                 __ramtop 0F00                   __ptext0 FF9C                   __ptext1 FF1A  
                 __ptext2 FF34                   __ptext3 FF52      end_of_initialization FF14  
               _TRISAbits 000F92                 _TRISBbits 000F93                 _TRISCbits 000F94  
               _SPI_Write FF1A       start_initialization FF14                ?_SPI_Write 0001  
__size_of_SPI_Init_Master 001E                  ?_MSdelay 0001               ??_SPI_Write 0001  
                MSdelay@i 0003                  MSdelay@j 0005                  _PIR1bits 000F9E  
       ??_SPI_Init_Master 0001               _INTCON2bits 000FF1          __size_of_MSdelay 004A  
                __Hrparam 0000                SPI_Write@x 0002                  __Lrparam 0000  
           __size_of_main 005C                MSdelay@val 0001           _SPI_Init_Master FF34  
